#ifndef REMOVEPROCEVENT_H
#define REMOVEPROCEVENT_H

#include "baseevent.h"
#include "../app.h"
#include <iostream>

namespace rmcommon {

/*!
 * \class event generated by the termination of a process managed by Konro
 */
class RemoveProcEvent : public BaseEvent {

    std::shared_ptr<rmcommon::App> app_;

public:

    RemoveProcEvent(std::shared_ptr<rmcommon::App> app) : app_(app) {}

    std::shared_ptr<rmcommon::App> getApp() const {
        return app_;
    }

    void printOnOstream(std::ostream &os) const override {
        os << "{\"pid\":"
           << app_->getPid()
           << "}";
    }
};

}   // namespace rmcommon

#endif // REMOVEPROCEVENT_H
